#!/usr/bin/env python
"""
Signal Sciences CLI Tool for Auditing Corp Config

API credentials must be exported to environment variables:
export SIGSCI_EMAIL=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
export SIGSCI_PASSWORD=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
export SIGSCI_CORP=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
export SIGSCI_SITE=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
"""

from __future__ import print_function
import os
import sys
import json
import argparse
from pysigsci import sigsciapi

def get_site_config(sigsciobj, name, directory='/tmp/pysigsci/audit'):
    if not os.path.exists(directory):
        os.makedirs(directory)

    sigsciobj.site = name

    with open('{}/{}.request_rules.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_request_rules(), outfile)

    with open('{}/{}.signal_rules.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_signal_rules(), outfile)

    with open('{}/{}.templated_rules.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_templated_rules(), outfile)

    with open('{}/{}.advanced_rules.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_advanced_rules(), outfile)

    with open('{}/{}.redactions.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_redactions(), outfile)

    with open('{}/{}.custom_signals.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_custom_signals(), outfile)

    with open('{}/{}.custom_alerts.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_custom_alerts(), outfile)

    with open('{}/{}.integrations.json'.format(directory, name), 'w') as outfile:
        json.dump(sigsciobj.get_integrations(), outfile)

def main():
    """
    Main function for Signal Sciences CLI Tool for Auditing Corp Config
    """
    try:
        email = os.environ["SIGSCI_EMAIL"]
        password = os.environ["SIGSCI_PASSWORD"]

    except KeyError as error:
        print("Environment variable not set {}".format(str(error)))
        sys.exit()

    # Create sigsciapi object
    sigsci = sigsciapi.SigSciApi(email, password)

    if 'message' in sigsci.token and 'Unauthorized' in sigsci.token['message']:
        print(sigsci.token['message'])
        sys.exit()

    if "SIGSCI_CORP" in os.environ:
        sigsci.corp = os.environ['SIGSCI_CORP']
    else:
        print('SIGSCI_CORP required.')
        sys.exit()

    if "SIGSCI_SITE" in os.environ:
        sigsci.site = os.environ['SIGSCI_SITE']
    else:
        print('SIGSCI_SITE required.')
        sys.exit()

    # get sites
    sites = sigsci.get_corp_sites()['data']

    for site in sites:
        print('Retreiving configuration for {}...'.format(site['name']))
        get_site_config(sigsci, name=site['name'])


if __name__ == '__main__':
    main()